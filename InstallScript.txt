IF NOT EXISTS (SELECT * FROM sys.tables
		WHERE [name] = N'DRINK_ITEMS')
BEGIN 
		CREATE TABLE DRINK_ITEMS(
		SEQNO INTEGER NOT NULL IDENTITY(1,1),
		NAME VARCHAR(50) NOT NULL,
		DESCRIPTION VARCHAR(100),
		PRICE DECIMAL(10,2) NOT NULL,
		DATE DATETIME NOT NULL,
		LOCATION VARCHAR(1) NOT NULL,
		TYPE VARCHAR(1),
		PRICESP DECIMAL(10,2),
		ENERGYSER DECIMAL(10,2),
		ENERGY100 DECIMAL(10,2),
		SUGARSER DECIMAL(10,2),
		SUGAR100 DECIMAL(10,2),
		BARCODE VARCHAR(20),
		SALEPRICE DECIMAL(10,2)
		)
END
GO


IF NOT EXISTS (SELECT * FROM sys.tables
		WHERE [name] = N'DRINK_ITEMSLINE')
BEGIN 
		CREATE TABLE DRINK_ITEMSLINE(
		SEQNO INTEGER NOT NULL IDENTITY(1,1),
		HDR_SEQNO INTEGER NOT NULL,
		NAME VARCHAR(50) NOT NULL,
		DESCRIPTION VARCHAR(100),
		PRICE DECIMAL(10,2) NOT NULL,
		DATE DATETIME NOT NULL,
		LOCATION VARCHAR(1) NOT NULL,
		TYPE VARCHAR(1),
		PRICESP DECIMAL(10,2),
		ENERGYSER DECIMAL(10,2),
		ENERGY100 DECIMAL(10,2),
		SUGARSER DECIMAL(10,2),
		SUGAR100 DECIMAL(10,2),
		BARCODE VARCHAR(20),
		SALEPRICE DECIMAL(10,2)
		)
END
GO

IF NOT EXISTS (SELECT * FROM sys.tables
		WHERE [name] = N'STOCK_LOCATION')
BEGIN
CREATE TABLE STOCK_LOCATION(
		LOCNO INTEGER NOT NULL IDENTITY(1,1),
		NAME VARCHAR(50),
		ISACTIVE VARCHAR(1)
		)
END 
GO

IF NOT EXISTS (SELECT * FROM sys.tables
		WHERE [name] = N'TYPE')
BEGIN
		CREATE TABLE TYPE(
		TYPENO INTEGER NOT NULL IDENTITY(1,1),
		NAME VARCHAR(50),
		)
END 
GO
PRINT 'Tables Created'



IF EXISTS ( SELECT  * FROM sys.objects
            WHERE   OBJECT_ID = OBJECT_ID(N'UPDATE_DRINKLINE')AND TYPE IN ( N'TR' ))   
BEGIN
    DROP TRIGGER  UPDATE_DRINKLINE
END
 GO
 CREATE TRIGGER UPDATE_DRINKLINE
   ON  DRINK_ITEMS
   AFTER  UPDATE
AS 
BEGIN

	SET NOCOUNT ON;
	   
   BEGIN 
   
   INSERT INTO DRINK_ITEMSLINE
   (HDR_SEQNO, NAME, DESCRIPTION, PRICE, DATE, LOCATION, TYPE, PRICESP, ENERGYSER, ENERGY100,
   SUGARSER, SUGAR100,BARCODE, SALEPRICE)
   SELECT deleted.SEQNO, deleted.NAME, deleted.DESCRIPTION, deleted.PRICE, deleted.DATE, deleted.LOCATION,
   deleted.TYPE, deleted.PRICESP, deleted.ENERGYSER, deleted.ENERGY100,
   deleted.SUGARSER, deleted.SUGAR100, deleted.BARCODE, deleted.SALEPRICE FROM deleted 
   	END

END
GO
PRINT 'Trigger Created'

SELECT * FROM DRINK_ITEMS 
-- Sameple Insert and update 
-- Will not need a where if the update/insert is done inside of a loop in the application

-- When its the first time the Item is getting put into the database
INSERT INTO DRINK_ITEMS (
NAME, DESCRIPTION, PRICE, DATE, LOCATION, TYPE, PRICESP, ENERGYSER, ENERGY100, SUGARSER, SUGAR100,BARCODE, SALEPRICE)
VALUES ('Coke Can', '368ml Can of Coke', 1, GETDATE(), '1', '1', '', '', '', 11, '', '', '', '')

-- When the item is already in the database
UPDATE DRINK_ITEMS 
SET PRICE = 'NEW PRICE', DATE = GETDATE()